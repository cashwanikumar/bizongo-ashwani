{"version":3,"sources":["containers/AppContainer/constants.js","containers/AppContainer/reducers.js","containers/EachGameContainer/constants.js","containers/EachGameContainer/reducers.js","utils/IndexReducer.js","containers/AppContainer/actions.js","utils/service/gameService.js","containers/AppContainer/sagas.js","containers/EachGameContainer/actions.js","containers/EachGameContainer/sagas.js","utils/IndexSagas.js","components/App/ListGame/eachGame.js","components/App/ListGame/index.js","components/App/index.js","containers/AppContainer/index.js","components/EachGame/index.js","containers/EachGameContainer/index.js","containers/LayoutContainer/index.js","components/NoMatch/index.js","serviceWorker.js","index.js"],"names":["GET_CSV_DATA","GET_CSV_DATA_SUCCESS","LOAD_MORE","UPDATE_CSV_DATA","initialState","fromJS","csvData","pageSize","totalLength","AppReducer","state","arguments","length","undefined","action","type","data","set","get","GET_EACH_GAME","GET_EACH_GAME_SUCCESS","game","EachGameReducer","IndexReducer","combineReducers","loadGameDataSuccess","getGameData","JSON","parse","localStorage","getItem","saveGameData","csv","setItem","stringify","setGameData","getGames","setGameDataSaga","loadGamesSaga","param","regenerator_default","a","wrap","_context","prev","next","call","shift","put","t0","stop","_marked","this","games","searchParam","sortType","_context2","sent","sort","filter","d","toLowerCase","startsWith","game1","game2","_marked2","_context3","takeLatest","_marked3","_context4","_marked4","sagas","getEachGameSuccess","loadGame","loadGameSaga","id","sagas_marked","sagas_marked2","EachGameContainer_sagas","IndexSaga","all","Object","toConsumableArray","AppSagas","map","saga","concat","EachGameSagas","IndexSagas_marked","EachGame","goToGame","push","_this","props","_this2","react_default","createElement","Col","md","sm","xs","className","Card","onClick","CardBody","Row","React","Component","ListGame","_this$props","gameData","loadMore","size","react","eachGame_EachGame","key","Button","App","csvFile","modal","search","isOpenSort","sortByType","onFileLoaded","setState","submitCSV","uploadGameData","toggleAddGame","prevState","onChangeSearch","e","target","value","searchGame","_this$state","loadGameData","toggleSort","sortBy","resetFilter","_this$state2","color","InputGroup","Input","onChange","InputGroupAddon","addonType","Dropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","Container","fluid","ListGame_ListGame","slice","Modal","ModalBody","Form","FormGroup","react_csv_reader_default","cssClass","label","ModalFooter","PureComponent","connect","getIn","history","dispatch","getEachGame","_this$props2","match","params","LayoutContainer","Navbar","light","expand","NavbarBrand","Children","toArray","children","NoMatch","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createBrowserHistory","routerMiddleware","router","sagaMiddleware","createSagaMiddleware","composeSetup","compose","store","createStore","connectRouter","applyMiddleware","run","IndexSagas","ReactDOM","render","containers_LayoutContainer","es","immutable","Switch","Route","excat","path","component","EachGameContainer","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5fc543c3.chunk.js","sourcesContent":["export const GET_CSV_DATA = 'GET_CSV_DATA'\nexport const GET_CSV_DATA_SUCCESS = 'GET_CSV_DATA_SUCCESS'\nexport const LOAD_MORE = 'LOAD_MORE'\nexport const UPDATE_CSV_DATA = 'UPDATE_CSV_DATA'\n","import { fromJS } from 'immutable'\nimport { GET_CSV_DATA_SUCCESS, LOAD_MORE } from './constants'\nconst initialState = fromJS({\n\tcsvData: [],\n\tpageSize: 10,\n\ttotalLength: 0\n})\n\n/* eslint-disable no-fallthrough */\nfunction AppReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_CSV_DATA_SUCCESS:\n\t\t\tlet length = action.data ? action.data.length : 0\n\t\t\treturn state\n\t\t\t\t.set('csvData', fromJS(action.data) || fromJS([]))\n\t\t\t\t.set('totalLength',  length)\n\t\tcase LOAD_MORE:\n\t\t\tlet pageSize = state.get('pageSize')\n\t\t\treturn state\n\t\t\t\t.set('pageSize', +pageSize + 10)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n/* eslint-enable no-fallthrough */\n\nexport default AppReducer\n","export const GET_EACH_GAME = 'GET_EACH_GAME'\nexport const GET_EACH_GAME_SUCCESS = 'GET_EACH_GAME_SUCCESS'","import { fromJS } from 'immutable'\nimport { GET_EACH_GAME_SUCCESS } from './constants'\n\nconst initialState = fromJS({\n\tgame: [],\n})\n\n/* eslint-disable no-fallthrough */\nfunction EachGameReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_EACH_GAME_SUCCESS:\n\t\t\treturn state\n\t\t\t\t.set('game', fromJS(action.data[0]))\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n/* eslint-enable no-fallthrough */\n\nexport default EachGameReducer\n","import { combineReducers } from 'redux-immutable'\nimport AppReducer from '../containers/AppContainer/reducers'\nimport EachGameReducer from '../containers/EachGameContainer/reducers'\n\nconst IndexReducer = combineReducers({\n\tAppReducer,\n\tEachGameReducer\n})\n\nexport default IndexReducer\n","import {\n\tGET_CSV_DATA,\n\tGET_CSV_DATA_SUCCESS,\n\tUPDATE_CSV_DATA,\n\tLOAD_MORE\n} from './constants'\n\nexport const loadGameDataSuccess = data => ({\n\ttype: GET_CSV_DATA_SUCCESS,\n\tdata\n})\n\nexport const loadGameData = (searchParam, sort) => ({\n\ttype: GET_CSV_DATA,\n\tsearchParam,\n\tsort\n})\n\nexport const uploadGameData = data => ({\n\ttype: UPDATE_CSV_DATA,\n\tdata\n})\n\nexport const loadMore = () => ({\n\ttype: LOAD_MORE\n})\n","export function getGameData() {\n\treturn JSON.parse(localStorage.getItem('game'))\n}\n\nexport function saveGameData(csv) {\n\tlocalStorage.setItem('game', JSON.stringify(csv))\n}\n","import { takeLatest, call, put } from 'redux-saga/effects'\n\nimport { loadGameDataSuccess } from './actions'\n\nimport { UPDATE_CSV_DATA, GET_CSV_DATA } from './constants'\n\nimport { saveGameData, getGameData } from '../../utils/service/gameService'\n\nfunction* setGameData(param) {\n\ttry {\n\t\tyield call(saveGameData, param.data)\n\t\tparam.data.shift()\n\t\tyield put(loadGameDataSuccess(param.data))\n\t} catch (error) {\n\t\t// todo\n\t}\n}\n\nfunction* getGames(param) {\n\ttry {\n\t\tlet games = yield call(getGameData)\n\t\tgames.shift()\n\t\tconst searchParam = param.searchParam\n\t\tconst sortType = param.sort\n\t\tif (searchParam) {\n\t\t\tgames = games.filter(d => {\n\t\t\t\tconst da = d[1] || ''\n\t\t\t\treturn da.toLowerCase().startsWith(searchParam.toLowerCase())\n\t\t\t})\n\t\t}\n\t\tif (sortType) {\n\t\t\tgames = games.sort(\n\t\t\t\t(game1, game2) => {\n\t\t\t\t\tif (sortType === 'Asc') {\n\t\t\t\t\t\treturn +game1[3] - +game2[3]\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn +game2[3] - +game1[3]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\tyield put(loadGameDataSuccess(games))\n\t} catch (error) {\n\t\t// todo\n\t}\n}\n\nfunction* setGameDataSaga() {\n\tyield takeLatest(UPDATE_CSV_DATA, setGameData)\n}\n\nfunction* loadGamesSaga() {\n\tyield takeLatest(GET_CSV_DATA, getGames)\n}\n\nexport default [setGameDataSaga, loadGamesSaga]\n","import {\n\tGET_EACH_GAME,\n\tGET_EACH_GAME_SUCCESS\n} from './constants'\n\nexport const getEachGame = id => ({\n\ttype: GET_EACH_GAME,\n\tid\n})\n\nexport const getEachGameSuccess = data => ({\n\ttype: GET_EACH_GAME_SUCCESS,\n\tdata\n})\n","import { takeLatest, call, put } from 'redux-saga/effects'\nimport { getEachGameSuccess } from './actions'\nimport { GET_EACH_GAME } from './constants'\nimport { getGameData } from '../../utils/service/gameService'\n\nfunction* loadGame(param) {\n\ttry {\n\t\tlet games = yield call(getGameData)\n\t\tgames.shift()\n\t\tgames = games.filter(d => d[0] === param.id)\n\t\tyield put(getEachGameSuccess(games))\n\t} catch (error) {\n\t\t// todo\n\t}\n}\n\nfunction* loadGameSaga() {\n\tyield takeLatest(GET_EACH_GAME, loadGame)\n}\n\nexport default [loadGameSaga]\n","import { all } from 'redux-saga/effects'\nimport AppSagas from '../containers/AppContainer/sagas'\nimport EachGameSagas from '../containers/EachGameContainer/sagas'\n\nexport default function* IndexSaga() {\n\tyield all([\n\t\t...AppSagas.map(saga => saga()),\n\t\t...EachGameSagas.map(saga => saga()),\n\t])\n}\n","import React from 'react'\nimport { Card, CardBody, Col, Row } from 'reactstrap'\n\nexport default class EachGame extends React.Component {\n\n\tgoToGame = id => {\n\t\tconst { push } = this.props\n\t\tpush(`/game/${id}`);\n\t}\n\n\trender() {\n\t\tconst { game } = this.props\n\t\treturn (\n\t\t\t<Col md={4} sm={6} xs={12} className=\"mb-3\">\n\t\t\t\t<Card onClick={() => this.goToGame(game.get(0))} className=\"pointer\">\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6}>{`# ${game.get(0)}`}</Col>\n\t\t\t\t\t\t\t<Col sm={6}>{`Year: ${game.get(3)}`}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6}><b>{`Name: ${game.get(1)}`}</b></Col>\n\t\t\t\t\t\t\t<Col sm={6}>{`Platform: ${game.get(2)}`}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6}>{`Genre: ${game.get(4)}`}</Col>\n\t\t\t\t\t\t\t<Col sm={6}>{`Sales: ${game.get(5)}`}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</Col>\n\n\t\t);\n\t}\n}","import React, { Fragment } from 'react'\nimport { Row, Button } from 'reactstrap'\nimport EachGame from './eachGame'\n\nexport default class ListGame extends React.Component {\n\n\trender() {\n\t\tconst { gameData, loadMore, totalLength, pageSize, push } = this.props\n\t\tif (gameData.size < 1) {\n\t\t\treturn <h2>No Data Found</h2>\n\t\t}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Row>\n\t\t\t\t\t{\n\t\t\t\t\t\tgameData.map(game => <EachGame key={`id-${game.get(0)}`} game={game} push={push} />)\n\t\t\t\t\t}\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t{\n\t\t\t\t\t\ttotalLength > pageSize ? <Button onClick={loadMore} className=\"t-center\">Load More</Button> : null\n\t\t\t\t\t}\n\t\t\t\t</Row>\n\t\t\t</Fragment>\n\n\t\t);\n\t}\n}","import React, { Fragment } from 'react'\nimport CSVReader from 'react-csv-reader'\nimport {\n\tForm, FormGroup, Button, Row, Col, Modal,\n\tModalBody, ModalFooter, Input, InputGroup, InputGroupAddon,\n\tDropdown, DropdownToggle, DropdownMenu, DropdownItem, Container\n} from 'reactstrap'\n\nimport ListGame from './ListGame'\n\nexport default class App extends React.PureComponent {\n\n\tstate = {\n\t\tcsvFile: '',\n\t\tmodal: false,\n\t\tsearch: '',\n\t\tisOpenSort: false,\n\t\tsortByType: ''\n\t}\n\n\t// Load data on app load\n\tcomponentDidMount() {\n\t\tconst { loadGameData } = this.props\n\t\tloadGameData()\n\t}\n\n\t// on File select\n\tonFileLoaded = data => {\n\t\tthis.setState({\n\t\t\tcsvFile: data\n\t\t})\n\t}\n\n\t// on Submit CSV\n\tsubmitCSV = () => {\n\t\tconst { csvFile } = this.state\n\t\tconst { uploadGameData } = this.props\n\t\tuploadGameData(csvFile)\n\t\tthis.toggleAddGame()\n\t}\n\n\ttoggleAddGame = () => {\n\t\tthis.setState(prevState => ({\n\t\t\tmodal: !prevState.modal\n\t\t}));\n\t}\n\n\t// On change search\n\tonChangeSearch = e => {\n\t\tthis.setState({\n\t\t\tsearch: e.target.value\n\t\t})\n\t}\n\n\t// Search Game\n\tsearchGame = () => {\n\t\tconst { search, sortByType } = this.state\n\t\tconst { loadGameData } = this.props\n\t\tloadGameData(search, sortByType)\n\t}\n\n\t// toggle sort dropdown\n\ttoggleSort = () => {\n\t\tthis.setState(prevState => ({\n\t\t\tisOpenSort: !prevState.isOpenSort\n\t\t}));\n\t}\n\n\t// apply sort\n\tsortBy = type => {\n\t\tconst { search } = this.state\n\t\tconst { loadGameData } = this.props\n\t\tthis.setState({\n\t\t\tsortByType: type\n\t\t}, () => loadGameData(search, type))\n\t}\n\n\t// reset filter\n\tresetFilter = () => {\n\t\tconst { loadGameData } = this.props\n\n\t\tthis.setState({\n\t\t\tsearch: '',\n\t\t\tsortByType: ''\n\t\t}, () => loadGameData('', ''))\n\t}\n\n\trender() {\n\t\tconst { gameData, pageSize, loadMore, totalLength, push } = this.props\n\t\tconst { isOpenSort, sortByType, search } = this.state\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Row>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"mb-2 mt-2 pull-right ml-4\"\n\t\t\t\t\t\tonClick={this.toggleAddGame}\n\t\t\t\t\t\tcolor=\"info\"\n\t\t\t\t\t>Upload Game CSV</Button>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={6}>\n\t\t\t\t\t\t<InputGroup className=\"ml-3\">\n\t\t\t\t\t\t\t<Input value={search} onChange={this.onChangeSearch} />\n\t\t\t\t\t\t\t<InputGroupAddon addonType=\"append\">\n\t\t\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.searchGame}>Search</Button>\n\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={3}>\n\t\t\t\t\t\t<Button onClick={this.resetFilter}>Clear Filter</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={3}>\n\t\t\t\t\t\t<Dropdown isOpen={isOpenSort} toggle={this.toggleSort}>\n\t\t\t\t\t\t\t<DropdownToggle className=\"pull-right\">\n\t\t\t\t\t\t\t\t{`Sort By (Year): ${sortByType}`}\n\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem onClick={() => this.sortBy('Asc')}>Asc</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem onClick={() => this.sortBy('Desc')}>Desc</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Container fluid className=\"mt-3\">\n\t\t\t\t\t<ListGame\n\t\t\t\t\t\tgameData={gameData.slice(0, pageSize)}\n\t\t\t\t\t\tloadMore={loadMore}\n\t\t\t\t\t\ttotalLength={totalLength}\n\t\t\t\t\t\tpageSize={pageSize}\n\t\t\t\t\t\tpush={push}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggleAddGame} className={this.props.className}>\n\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<CSVReader\n\t\t\t\t\t\t\t\t\tcssClass=\"react-csv-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Select Game CSV File\"\n\t\t\t\t\t\t\t\t\tonFileLoaded={this.onFileLoaded}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t<Button color=\"primary\" onClick={this.submitCSV}>Upload</Button>{' '}\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggleAddGame}>Cancel</Button>\n\t\t\t\t\t</ModalFooter>\n\t\t\t\t</Modal>\n\t\t\t</Fragment>\n\n\t\t);\n\t}\n}","import { connect } from 'react-redux';\nimport App from '../../components/App'\nimport { loadGameData, uploadGameData, loadMore } from './actions'\n\nconst mapStateToProps = (state, props) => ({\n\tgameData: state.getIn(['AppReducer', 'csvData']),\n\tpageSize: state.getIn(['AppReducer', 'pageSize']),\n\ttotalLength: state.getIn(['AppReducer', 'totalLength']),\n\tpush: props.history.push\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tuploadGameData: data => dispatch(uploadGameData(data)),\n\tloadGameData: (searchParam, sort) => dispatch(loadGameData(searchParam, sort)),\n\tloadMore: () => dispatch(loadMore())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react'\nimport { Row, Col, CardBody, Card, Button } from 'reactstrap'\n\nexport default class EachGame extends React.Component {\n\n\tcomponentDidMount() {\n\t\tconst { getEachGame, id } = this.props\n\t\tgetEachGame(id)\n\t}\n\trender() {\n\t\tconst { game, push } = this.props\n\t\tif (!game || game.size < 1) {\n\t\t\treturn (\n\t\t\t\t<Row>\n\t\t\t\t\t<div className=\"mt-3 t-center\">\n\t\t\t\t\t\t<h1>No Record Found</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</Row>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"mt-3\">\n\t\t\t\t<Card>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6} className=\"t-right\">Id:</Col>\n\t\t\t\t\t\t\t<Col sm={6}>{game.get(0)}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6} className=\"t-right\">Name:</Col>\n\t\t\t\t\t\t\t<Col sm={6}>{game.get(1)}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6} className=\"t-right\">Platform:</Col>\n\t\t\t\t\t\t\t<Col sm={6}>{game.get(2)}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6} className=\"t-right\">Year:</Col>\n\t\t\t\t\t\t\t<Col sm={6}>{game.get(3)}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6} className=\"t-right\">Publisher:</Col>\n\t\t\t\t\t\t\t<Col sm={6}>{game.get(4)}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={6} className=\"t-right\">Global Sales:</Col>\n\t\t\t\t\t\t\t<Col sm={6}>{game.get(5)}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Button onClick={() => push('/')} className=\"t-center\">Go Home</Button>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}","import { connect } from 'react-redux';\nimport EachGame from '../../components/EachGame'\nimport { getEachGame } from './actions'\n\nconst mapStateToProps = (state, props) => {\n\treturn {\n\t\tgame: state.getIn(['EachGameReducer', 'game']),\n\t\tid: props.match.params.id || '',\n\t\tpush: props.history.push\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgetEachGame: id => dispatch(getEachGame(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EachGame);\n","import React, { Component } from 'react'\nimport {\n\tNavbar,\n\tNavbarBrand,\n\tContainer\n} from 'reactstrap';\nclass LayoutContainer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar color=\"dark\" light expand=\"md\">\n\t\t\t\t\t<NavbarBrand className=\"white\">Bizongo</NavbarBrand>\n\t\t\t\t</Navbar>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t{React.Children.toArray(this.props.children)}\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LayoutContainer\n","import React, { Component } from 'react'\n\nclass NoMatch extends Component {\n\trender() {\n\t\treturn <h2>404 Page Not Found...</h2>\n\t}\n}\n\nexport default NoMatch\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport {\n\tconnectRouter,\n\tConnectedRouter,\n\trouterMiddleware as router\n} from 'connected-react-router/immutable'\nimport { applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\n// Import the index reducer and sagas\nimport IndexReducer from './utils/IndexReducer'\nimport IndexSagas from './utils/IndexSagas'\n\n// Import all of our components\nimport App from './containers/AppContainer'\nimport EachGameContainer from './containers/EachGameContainer'\nimport LayoutContainer from './containers/LayoutContainer'\nimport NoMatch from './components/NoMatch'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// Import app names\n\n// Other Imports\nimport * as registerServiceWorker from './serviceWorker';\n\nimport './index.scss'\n\n// Create browser history\nconst history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst routerMiddleware = router(history)\n\n// Build the middleware to watch between the Reducers and the Actions\nconst sagaMiddleware = createSagaMiddleware()\n\n/*eslint-disable */\nconst composeSetup =\n\tprocess.env.NODE_ENV !== 'production' &&\n\t\ttypeof window === 'object' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t: compose\n/* eslint-enable */\n// Setup Store\nconst store = createStore(\n\tconnectRouter(history)(IndexReducer),\n\tcomposeSetup(\n\t\tapplyMiddleware(\n\t\t\trouterMiddleware,\n\t\t\tsagaMiddleware,\n\t\t)\n\t) // allows redux devtools to watch sagas\n)\n\n// Begin our Index Saga\nsagaMiddleware.run(IndexSagas)\n\nReactDOM.render(\n\t<LayoutContainer>\n\t\t<Provider store={store}>\n\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route excat path=\"/game/:id\" component={EachGameContainer} />\n\t\t\t\t\t<Route excat path=\"/\" component={App} />\n\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t</Switch>\n\t\t\t</ConnectedRouter>\n\t\t</Provider>\n\t</LayoutContainer>,\n\tdocument.getElementById('root')\n)\nregisterServiceWorker.register()\n"],"sourceRoot":""}